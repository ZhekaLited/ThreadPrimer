public class ThreadDemo extends Thread {
    public static void main(String[] args)  {
        System.out.println("Thread: " + Thread.currentThread().getName());

        System.out.println("Creating thread");
        Thread thread = new ThreadDemo();

        System.out.println("Starting thread");
        thread.start();

        System.out.println("Creating thread");
        Thread thread2 = new ThreadDemo();

        System.out.println("Starting thread");
        thread2.start();

        try {
            thread.join();
            thread2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println(Thread.currentThread().getName() + " is finish");

    }

    @Override
    public void run() {
        for(int i=0; i<3; i++) {
            System.out.println(Thread.currentThread().getName() + "is running");
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
            System.out.println(Thread.currentThread().getName() + "is finish");
    }
}


---------------------------------------------------------------------------------------------------------------------------------------------------------------------


public class Runners {
    public static void main(String[] args) {
        Runner1 runner1 = new Runner1();
        Runner2 runner2 = new Runner2();

        Thread thread1 = new Thread(runner1);
        Thread thread2 = new Thread(runner2);

//        thread1.setPriority(1);
//        thread2.setPriority(9);

        thread1.start();
        thread2.start();
    }
}

//Бегун
class Runner1 implements Runnable {

    @Override
    public void run() {
        long begin = System.currentTimeMillis();
        long end = begin + 300;
//        for (int i = 0; i < 5; i++) {
        while (System.currentTimeMillis() < end) {
            System.out.println("Runner 1 is running");
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

    //}
    class Runner2 implements Runnable {

        @Override
        public void run() {
            for (int i = 0; i < 5; i++) {
                System.out.println("Runner 2 is running");
                try {
                    Thread.sleep(200);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
